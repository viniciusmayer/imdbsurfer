# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-24 20:51
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('imdbsurfer', '0003_auto_20170623_2001'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dh_create', models.DateTimeField(auto_now_add=True)),
                ('dh_update', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('obs', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArtistRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dh_create', models.DateTimeField(auto_now_add=True)),
                ('dh_update', models.DateTimeField(auto_now=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdbsurfer.Artist')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dh_create', models.DateTimeField(auto_now_add=True)),
                ('dh_update', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('obs', models.CharField(blank=True, max_length=255, null=True)),
                ('user_create', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_genre_create_related', to=settings.AUTH_USER_MODEL)),
                ('user_update', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_genre_update_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MovieArtistRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dh_create', models.DateTimeField(auto_now_add=True)),
                ('dh_update', models.DateTimeField(auto_now=True)),
                ('artistRole', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdbsurfer.ArtistRole')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dh_create', models.DateTimeField(auto_now_add=True)),
                ('dh_update', models.DateTimeField(auto_now=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdbsurfer.Genre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dh_create', models.DateTimeField(auto_now_add=True)),
                ('dh_update', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('obs', models.CharField(blank=True, max_length=255, null=True)),
                ('user_create', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_role_create_related', to=settings.AUTH_USER_MODEL)),
                ('user_update', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_role_update_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='watch',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='movie',
            name='watched',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='moviegenre',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdbsurfer.Movie'),
        ),
        migrations.AddField(
            model_name='moviegenre',
            name='user_create',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_moviegenre_create_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='moviegenre',
            name='user_update',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_moviegenre_update_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movieartistrole',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdbsurfer.Movie'),
        ),
        migrations.AddField(
            model_name='movieartistrole',
            name='user_create',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_movieartistrole_create_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movieartistrole',
            name='user_update',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_movieartistrole_update_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='artistrole',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdbsurfer.Role'),
        ),
        migrations.AddField(
            model_name='artistrole',
            name='user_create',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_artistrole_create_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='artistrole',
            name='user_update',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_artistrole_update_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='artist',
            name='role',
            field=models.ManyToManyField(through='imdbsurfer.ArtistRole', to='imdbsurfer.Role'),
        ),
        migrations.AddField(
            model_name='artist',
            name='user_create',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_artist_create_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='artist',
            name='user_update',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='imdbsurfer_artist_update_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movie',
            name='artists',
            field=models.ManyToManyField(through='imdbsurfer.MovieArtistRole', to='imdbsurfer.ArtistRole'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genres',
            field=models.ManyToManyField(through='imdbsurfer.MovieGenre', to='imdbsurfer.Genre'),
        ),
    ]
